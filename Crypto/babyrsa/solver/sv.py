from Crypto.Util.number import bytes_to_long, long_to_bytes
from gmpy2 import invert

e = 65537
n = 141447521010409715978466391828662085140481385303596501160994132038469828539414844060195589205281220302356643563374596198973040335441199701517721616135922486854046595889016538839073596409795053890443134310083808704454634974195699040411014003994514913619548251118275799556785345575887874992001169318793841964750244203668503124975418343821449566163477087552258690508954138481959050673657012390162790476327815778481233682634922391285068426949420592867812319186831456174290100818419837925837712496698710827358571844805441862162048958630078810588604161637201747564881989757260043555949930621012221652930689
p = 376095095701086902618264068035493524057244306569708617067936447460828388237020466338495692661193514102596053539344619007896584679357010083675919783789815549148836463025046605552846960573699200079210603585224902514253849098698178275996198868104325524261829683686883758208230356506949156789832148205633

with open('flag.enc') as f:
    c = bytes_to_long(f.read())

totient = p * (p - 1)
d = invert(e, totient)
res = pow(c, d, n)

print(long_to_bytes(res))
